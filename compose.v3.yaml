
services:
  
  web:
    ports:
      - "80:80"
    image: gruimed/nginx-otel:0.1
    hostname: web
    volumes:
      - ./nginx/nginx-config.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/opentelemetry_module.conf:/etc/nginx/conf.d/opentelemetry_module.conf
    sysctls:
      net.ipv4.ip_local_port_range: "10240 65535"

    depends_on:
      - php-fpm
      - java-service

  java-service:
    build:
      context: java-service
      dockerfile: Dockerfile

    volumes:
      - ./java-service/otel/opentelemetry-javaagent.jar:/app/opentelemetry-javaagent.jar
      - ./java-service/otel/otel.properties:/app/otel.properties

    entrypoint: java -javaagent:/app/opentelemetry-javaagent.jar -Dotel.javaagent.configuration-file=/app/otel.properties -jar /app/app.jar
    depends_on:
      - otel-collector

  go-service:
    build:
      context: go-service
      dockerfile: Dockerfile.v2
    privileged: true
    pid: "host"

    sysctls:
      net.ipv4.ip_local_port_range: "10240 65535"
    volumes:
      - /proc:/host/proc
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=mygo-service-manual
      - OTEL_PROPAGATORS=tracecontext,baggage

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"


  go-auto:
    depends_on:
      - go-service
      - otel-collector
    image: otel/autoinstrumentation-go
#    build:
#      context: otel-go
#      dockerfile: Dockerfile
    privileged: true
    pid: "host"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_GO_AUTO_TARGET_EXE=/go/dice
      - OTEL_GO_AUTO_INCLUDE_DB_STATEMENT=true
      - OTEL_GO_AUTO_PARSE_DB_STATEMENT=true
      - OTEL_SERVICE_NAME=mygo-service
      - OTEL_PROPAGATORS=tracecontext,baggage
      - OTEL_LOG_LEVEL=info
      - CGO_ENABLED=1
    volumes:
      - /proc:/host/proc

  php-composer:
    image: composer/composer:latest
    volumes:
      - ./www:/app
      - ./PHPFpm/composer.v2.json:/app/composer.json
    command: /bin/bash -c "composer update --ignore-platform-reqs"

  php-fpm:
    build:
      context: PHPFpm
      dockerfile: Dockerfile.v2
    hostname: phpfpm
    environment:
      - OTEL_PHP_AUTOLOAD_ENABLED=true
      - OTEL_SERVICE_NAME=php-service
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_PROPAGATORS=baggage,tracecontext
    sysctls:
      net.ipv4.ip_local_port_range: "10240 65535"

    volumes:
      - ./www:/usr/share/www
      - ./PHPFpm/composer.v2.json:/usr/share/www/composer.json
      - ./PHPFpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./PHPFpm/docker.conf:/usr/local/etc/php-fpm.d/docker.conf
      - ./PHPFpm/pinba.ini:/usr/local/etc/php/conf.d/pinba.ini
    depends_on:
      php-composer:
        condition: service_completed_successfully
  
  echo-service:
    build:
      context: echo-service
      dockerfile: Dockerfile
    hostname: echo-service

  pinba:
    image: gruimed/pinba:0.1
    hostname: pinba


# {{{ prometheus
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    command:
      - '--path.rootfs=/host'
#    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3030:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

# }}} prometheus



# SigNoz {{{
  zookeeper-1:
    image: bitnami/zookeeper:3.7.1
    container_name: signoz-zookeeper-1
    hostname: zookeeper-1
    user: root
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    volumes:
      - ./data/zookeeper:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1

  clickhouse:
    image: clickhouse/clickhouse-server:24.1.2-alpine
    depends_on:
      - zookeeper-1
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "-q",
          "0.0.0.0:8123/ping"
        ]

    container_name: signoz-clickhouse
    hostname: clickhouse
    ports:
      - "9000:9000"
      - "8123:8123"
      - "9181:9181"
    volumes:
      - ./signoz/clickhouse-config.xml:/etc/clickhouse-server/config.xml
      - ./signoz/clickhouse-users.xml:/etc/clickhouse-server/users.xml
      - ./signoz/custom-function.xml:/etc/clickhouse-server/custom-function.xml
      - ./signoz/clickhouse-cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
      - ./data/clickhouse/:/var/lib/clickhouse/
      - ./signoz/user_scripts:/var/lib/clickhouse/user_scripts/


  query-service:
    image: signoz/query-service:${DOCKER_TAG:-0.49.1}
    container_name: signoz-query-service
    command:
      [
        "-config=/root/config/prometheus.yml"
      ]
    volumes:
      - ./signoz/prometheus.yml:/root/config/prometheus.yml
      - ../dashboards:/root/config/dashboards
      - ./data/signoz/:/var/lib/signoz/
    environment:
      - ClickHouseUrl=tcp://clickhouse:9000
      - SIGNOZ_LOCAL_DB_PATH=/var/lib/signoz/signoz.db
      - DASHBOARDS_PATH=/root/config/dashboards
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "-q",
          "localhost:8080/api/v1/health"
        ]
    depends_on:
      clickhouse:
        condition: service_healthy

  signoz-frontend:
    image: signoz/frontend:${DOCKER_TAG:-0.49.1}
    container_name: signoz-frontend
    restart: on-failure
    depends_on:
      - query-service
    ports:
      - "3301:3301"
    volumes:
      - ./signoz/nginx-config.conf:/etc/nginx/conf.d/default.conf

  otel-collector-migrator:
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-0.102.2}
    container_name: otel-migrator
    command:
      - "--dsn=tcp://clickhouse:9000"
    depends_on:
      clickhouse:
        condition: service_healthy
  
  otel-collector:
    image: signoz/signoz-otel-collector:${OTELCOL_TAG:-0.102.2}
    container_name: signoz-otel-collector
    command:
      [
        "--config=/etc/otel-collector-config.yaml",
        "--manager-config=/etc/manager-config.yaml",
        "--copy-path=/var/tmp/collector-config.yaml",
        "--feature-gates=-pkg.translator.prometheus.NormalizeName"
      ]
    user: root # required for reading docker container logs
    volumes:
      - ./signoz/otel-collector-config.v3.yaml:/etc/otel-collector-config.yaml
      - ./signoz/otel-collector-opamp-config.yaml:/etc/manager-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /:/hostfs:ro
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - DOCKER_MULTI_NODE_CLUSTER=false
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    restart: on-failure
    depends_on:
      clickhouse:
        condition: service_healthy
      otel-collector-migrator:
        condition: service_completed_successfully
      query-service:
        condition: service_healthy

# SigNoz }}}




volumes:
  prom_data: